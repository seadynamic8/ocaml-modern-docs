// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var List = require("bs-platform/lib/js/list.js");
var Types = require("./types.bs.js");
var $$String = require("bs-platform/lib/js/string.js");
var Content = require("./content.bs.js");
var Decoder = require("./decoder.bs.js");
var License = require("./license.bs.js");
var Sidebar = require("./sidebar.bs.js");
var Tea_cmd = require("bucklescript-tea/src-ocaml/tea_cmd.js");
var Tea_sub = require("bucklescript-tea/src-ocaml/tea_sub.js");
var Tea_html = require("bucklescript-tea/src-ocaml/tea_html.js");
var Tea_task = require("bucklescript-tea/src-ocaml/tea_task.js");
var Home_page = require("./home_page.bs.js");
var Belt_MapString = require("bs-platform/lib/js/belt_MapString.js");
var Tea_navigation = require("bucklescript-tea/src-ocaml/tea_navigation.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

var json = JSON.parse(Fs.readFileSync("parser/modules.json", "utf8"));

var get_module_list = Decoder.Decode[/* decode_modules */13](json);

function get_function_names(elements, functions) {
  return List.rev(List.fold_left((function (functions, e) {
                    if (e.tag === 2) {
                      return /* :: */[
                              e[0],
                              functions
                            ];
                    } else {
                      return functions;
                    }
                  }), functions, elements));
}

function functions_in_sub_sections(sub_sections, functions) {
  return List.rev(List.fold_left((function (functions, ss) {
                    return get_function_names(ss[/* elements */2], functions);
                  }), functions, sub_sections));
}

function functions_in_section(section) {
  return get_function_names(section[/* elements */2], functions_in_sub_sections(section[/* sub_sections */3], /* [] */0));
}

function get_function_list(sections) {
  return List.flatten(List.rev(List.fold_left((function (functions, s) {
                        return /* :: */[
                                functions_in_section(s),
                                functions
                              ];
                      }), /* [] */0, sections)));
}

function create_sidebar_link_state(module_list) {
  return List.map((function (m) {
                return /* record */[
                        /* name */m[/* module_name */0],
                        /* selected */false,
                        /* functions */get_function_list(m[/* sections */2]),
                        /* functions_selected */false
                      ];
              }), module_list);
}

function init(_, $$location) {
  return /* tuple */[
          /* record */[
            /* history : :: */[
              $$location,
              /* [] */0
            ],
            /* module_list */get_module_list,
            /* sidebar : record */[
              /* search_term */"",
              /* search_results : [] */0,
              /* sidebar_links */create_sidebar_link_state(get_module_list),
              /* icon_selected */false
            ],
            /* page : record */[
              /* name */"docs_home",
              /* position */""
            ]
          ],
          Tea_cmd.none
        ];
}

function parse_hash_value(hash) {
  var match = hash.split("-");
  var len = match.length;
  if (len >= 3) {
    return /* record */[
            /* name */"",
            /* position */""
          ];
  } else {
    switch (len) {
      case 0 : 
          return /* record */[
                  /* name */"",
                  /* position */""
                ];
      case 1 : 
          var name = match[0];
          return /* record */[
                  /* name */name.substr(1),
                  /* position */""
                ];
      case 2 : 
          var name$1 = match[0];
          var position = match[1];
          return /* record */[
                  /* name */name$1.substr(1),
                  /* position */position
                ];
      
    }
  }
}

function flipSidebarLinkSelected(sidebar_link_name, is_functions, sidebar_link) {
  if (sidebar_link[/* name */0] === sidebar_link_name) {
    if (is_functions) {
      return /* record */[
              /* name */sidebar_link[/* name */0],
              /* selected */sidebar_link[/* selected */1],
              /* functions */sidebar_link[/* functions */2],
              /* functions_selected */!sidebar_link[/* functions_selected */3]
            ];
    } else {
      return /* record */[
              /* name */sidebar_link[/* name */0],
              /* selected */!sidebar_link[/* selected */1],
              /* functions */sidebar_link[/* functions */2],
              /* functions_selected */sidebar_link[/* functions_selected */3]
            ];
    }
  } else {
    return sidebar_link;
  }
}

function flipSidebarIconSelected(condition, sidebar) {
  if (condition) {
    return /* record */[
            /* search_term */sidebar[/* search_term */0],
            /* search_results */sidebar[/* search_results */1],
            /* sidebar_links */sidebar[/* sidebar_links */2],
            /* icon_selected */!sidebar[/* icon_selected */3]
          ];
  } else {
    return sidebar;
  }
}

function scrollToPosition(position) {
  var element = document.querySelector("#" + position);
  if (element !== null) {
    element.scrollIntoView();
    element.classList.add("blink");
    setTimeout((function () {
            element.classList.remove("blink");
            return /* () */0;
          }), 1000);
    return /* () */0;
  } else {
    return 0;
  }
}

function setScrollPosition(position) {
  if (position === "") {
    window.scrollTo(0, 0);
    return /* () */0;
  } else {
    return scrollToPosition(position);
  }
}

function update_element_results(category, name, element_results) {
  return Belt_MapString.update(element_results, category, (function (r) {
                if (r !== undefined) {
                  return /* :: */[
                          name,
                          r
                        ];
                } else {
                  return /* :: */[
                          name,
                          /* [] */0
                        ];
                }
              }));
}

function elements_search_results(element_results, search_term, section_elements) {
  return List.fold_left((function (element_results, element) {
                switch (element.tag | 0) {
                  case 0 : 
                      var name = element[0];
                      if ($$String.lowercase(name).includes(search_term)) {
                        return update_element_results("Type", name, element_results);
                      } else {
                        return element_results;
                      }
                  case 1 : 
                      var name$1 = element[0];
                      if ($$String.lowercase(name$1).includes(search_term)) {
                        return update_element_results("Type", name$1, element_results);
                      } else {
                        return element_results;
                      }
                  case 2 : 
                      var name$2 = element[0];
                      if ($$String.lowercase(name$2).includes(search_term)) {
                        return update_element_results("Function", name$2, element_results);
                      } else {
                        return element_results;
                      }
                  case 3 : 
                      var name$3 = element[0];
                      if ($$String.lowercase(name$3).includes(search_term)) {
                        return update_element_results("Exception", name$3, element_results);
                      } else {
                        return element_results;
                      }
                  case 4 : 
                      var name$4 = element[0];
                      if ($$String.lowercase(name$4).includes(search_term)) {
                        return update_element_results("Module", name$4, element_results);
                      } else {
                        return element_results;
                      }
                  case 5 : 
                      var name$5 = element[0];
                      if ($$String.lowercase(name$5).includes(search_term)) {
                        return update_element_results("Module", name$5, element_results);
                      } else {
                        return element_results;
                      }
                  case 6 : 
                      return element_results;
                  
                }
              }), element_results, section_elements);
}

function sections_search_results(search_result, search_term, sections) {
  return List.fold_left((function (search_result, section) {
                return /* record */[
                        /* module_group */search_result[/* module_group */0],
                        /* element_results */elements_search_results(search_result[/* element_results */1], search_term, section[/* elements */2])
                      ];
              }), search_result, sections);
}

function create_search_result(module_name) {
  return /* record */[
          /* module_group */module_name,
          /* element_results */Belt_MapString.empty
        ];
}

function get_search_results(search_term, module_list) {
  return List.rev(List.fold_left((function (results, m) {
                    var new_search_result_000 = /* module_group */m[/* module_name */0];
                    var new_search_result = /* record */[
                      new_search_result_000,
                      /* element_results */Belt_MapString.empty
                    ];
                    var section_result = sections_search_results(new_search_result, search_term, m[/* sections */2]);
                    if (Belt_MapString.isEmpty(section_result[/* element_results */1])) {
                      return results;
                    } else {
                      return /* :: */[
                              section_result,
                              results
                            ];
                    }
                  }), /* [] */0, module_list));
}

function update(model, msg) {
  if (typeof msg === "number") {
    switch (msg) {
      case 0 : 
          setScrollPosition(model[/* page */3][/* position */1]);
          return /* tuple */[
                  model,
                  Tea_cmd.none
                ];
      case 1 : 
          if (model[/* sidebar */2][/* search_term */0].length > 1) {
            var search_term = $$String.lowercase(model[/* sidebar */2][/* search_term */0]);
            var search_results = get_search_results(search_term, model[/* module_list */1]);
            var init = model[/* sidebar */2];
            return /* tuple */[
                    /* record */[
                      /* history */model[/* history */0],
                      /* module_list */model[/* module_list */1],
                      /* sidebar : record */[
                        /* search_term */init[/* search_term */0],
                        /* search_results */search_results,
                        /* sidebar_links */init[/* sidebar_links */2],
                        /* icon_selected */init[/* icon_selected */3]
                      ],
                      /* page */model[/* page */3]
                    ],
                    Tea_cmd.none
                  ];
          } else {
            return /* tuple */[
                    model,
                    Tea_cmd.none
                  ];
          }
      case 2 : 
          var init$1 = model[/* sidebar */2];
          return /* tuple */[
                  /* record */[
                    /* history */model[/* history */0],
                    /* module_list */model[/* module_list */1],
                    /* sidebar : record */[
                      /* search_term */"",
                      /* search_results : [] */0,
                      /* sidebar_links */init$1[/* sidebar_links */2],
                      /* icon_selected */init$1[/* icon_selected */3]
                    ],
                    /* page */model[/* page */3]
                  ],
                  Tea_cmd.none
                ];
      case 3 : 
          var init$2 = model[/* sidebar */2];
          return /* tuple */[
                  /* record */[
                    /* history */model[/* history */0],
                    /* module_list */model[/* module_list */1],
                    /* sidebar : record */[
                      /* search_term */init$2[/* search_term */0],
                      /* search_results */init$2[/* search_results */1],
                      /* sidebar_links */init$2[/* sidebar_links */2],
                      /* icon_selected */!model[/* sidebar */2][/* icon_selected */3]
                    ],
                    /* page */model[/* page */3]
                  ],
                  Tea_cmd.none
                ];
      
    }
  } else {
    switch (msg.tag | 0) {
      case 0 : 
          var $$location = msg[0];
          var icon_selected = model[/* sidebar */2][/* icon_selected */3] ? !model[/* sidebar */2][/* icon_selected */3] : model[/* sidebar */2][/* icon_selected */3];
          var init$3 = model[/* sidebar */2];
          return /* tuple */[
                  /* record */[
                    /* history : :: */[
                      $$location,
                      model[/* history */0]
                    ],
                    /* module_list */model[/* module_list */1],
                    /* sidebar : record */[
                      /* search_term */init$3[/* search_term */0],
                      /* search_results */init$3[/* search_results */1],
                      /* sidebar_links */init$3[/* sidebar_links */2],
                      /* icon_selected */icon_selected
                    ],
                    /* page */parse_hash_value($$location[/* hash */7])
                  ],
                  Tea_task.perform((function () {
                          return /* Scroll */0;
                        }), Tea_task.succeed(/* () */0))
                ];
      case 1 : 
          var is_functions = msg[1];
          var sidebar_link_name = msg[0];
          var sidebar_links = List.map((function (param) {
                  return flipSidebarLinkSelected(sidebar_link_name, is_functions, param);
                }), model[/* sidebar */2][/* sidebar_links */2]);
          var init$4 = model[/* sidebar */2];
          return /* tuple */[
                  /* record */[
                    /* history */model[/* history */0],
                    /* module_list */model[/* module_list */1],
                    /* sidebar : record */[
                      /* search_term */init$4[/* search_term */0],
                      /* search_results */init$4[/* search_results */1],
                      /* sidebar_links */sidebar_links,
                      /* icon_selected */init$4[/* icon_selected */3]
                    ],
                    /* page */model[/* page */3]
                  ],
                  Tea_cmd.none
                ];
      case 2 : 
          var init$5 = model[/* sidebar */2];
          return /* tuple */[
                  /* record */[
                    /* history */model[/* history */0],
                    /* module_list */model[/* module_list */1],
                    /* sidebar : record */[
                      /* search_term */msg[0],
                      /* search_results */init$5[/* search_results */1],
                      /* sidebar_links */init$5[/* sidebar_links */2],
                      /* icon_selected */init$5[/* icon_selected */3]
                    ],
                    /* page */model[/* page */3]
                  ],
                  Tea_cmd.none
                ];
      
    }
  }
}

function view_main(model) {
  var match = model[/* page */3];
  var name = match[/* name */0];
  switch (name) {
    case "docs_home" : 
        return Home_page.home_page(/* () */0);
    case "license" : 
        return /* :: */[
                Tea_html.main(undefined, undefined, /* :: */[
                      Tea_html.id("license"),
                      /* :: */[
                        Tea_html.class$prime("content"),
                        /* [] */0
                      ]
                    ], License.license(/* () */0)),
                /* [] */0
              ];
    default:
      try {
        return Content.view_content(List.find((function (m) {
                          return m[/* module_name */0] === name;
                        }), model[/* module_list */1]));
      }
      catch (exn){
        if (exn === Caml_builtin_exceptions.not_found) {
          return /* :: */[
                  Tea_html.main(undefined, undefined, /* :: */[
                        Tea_html.id("not-found"),
                        /* :: */[
                          Tea_html.class$prime("content"),
                          /* [] */0
                        ]
                      ], /* :: */[
                        Tea_html.h1(undefined, undefined, /* :: */[
                              Tea_html.class$prime("title"),
                              /* [] */0
                            ], /* :: */[
                              Tea_html.text("Not Found"),
                              /* [] */0
                            ]),
                        /* [] */0
                      ]),
                  /* [] */0
                ];
        } else {
          throw exn;
        }
      }
  }
}

function view(model) {
  return Tea_html.div(undefined, undefined, /* :: */[
              Tea_html.id("site-container"),
              /* [] */0
            ], /* :: */[
              Tea_html.div(undefined, undefined, /* :: */[
                    Tea_html.id("backdrop"),
                    /* :: */[
                      Tea_html.classList(/* :: */[
                            /* tuple */[
                              "selected",
                              model[/* sidebar */2][/* icon_selected */3]
                            ],
                            /* [] */0
                          ]),
                      /* :: */[
                        Tea_html.onClick(/* ClickedSidebarIcon */3),
                        /* [] */0
                      ]
                    ]
                  ], /* [] */0),
              /* :: */[
                Sidebar.view_sidebar(model[/* sidebar */2]),
                /* :: */[
                  Tea_html.i(undefined, undefined, /* :: */[
                        Tea_html.classList(/* :: */[
                              /* tuple */[
                                "fas fa-bars fa-lg",
                                true
                              ],
                              /* :: */[
                                /* tuple */[
                                  "selected",
                                  model[/* sidebar */2][/* icon_selected */3]
                                ],
                                /* [] */0
                              ]
                            ]),
                        /* :: */[
                          Tea_html.id("sidebar-icon"),
                          /* :: */[
                            Tea_html.onClick(/* ClickedSidebarIcon */3),
                            /* [] */0
                          ]
                        ]
                      ], /* [] */0),
                  /* :: */[
                    Tea_html.div(undefined, undefined, /* :: */[
                          Tea_html.id("main-container"),
                          /* [] */0
                        ], view_main(model)),
                    /* [] */0
                  ]
                ]
              ]
            ]);
}

var main = Tea_navigation.navigationProgram(Types.urlChange, /* record */[
      /* init */init,
      /* update */update,
      /* view */view,
      /* subscriptions */(function () {
          return Tea_sub.none;
        }),
      /* shutdown */(function () {
          return Tea_cmd.none;
        })
    ]);

var Task = 0;

exports.Task = Task;
exports.get_module_list = get_module_list;
exports.get_function_names = get_function_names;
exports.functions_in_sub_sections = functions_in_sub_sections;
exports.functions_in_section = functions_in_section;
exports.get_function_list = get_function_list;
exports.create_sidebar_link_state = create_sidebar_link_state;
exports.init = init;
exports.parse_hash_value = parse_hash_value;
exports.flipSidebarLinkSelected = flipSidebarLinkSelected;
exports.flipSidebarIconSelected = flipSidebarIconSelected;
exports.scrollToPosition = scrollToPosition;
exports.setScrollPosition = setScrollPosition;
exports.update_element_results = update_element_results;
exports.elements_search_results = elements_search_results;
exports.sections_search_results = sections_search_results;
exports.create_search_result = create_search_result;
exports.get_search_results = get_search_results;
exports.update = update;
exports.view_main = view_main;
exports.view = view;
exports.main = main;
/* json Not a pure module */
