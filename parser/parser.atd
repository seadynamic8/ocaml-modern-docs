type name = string
type info = string nullable

type type_type       = string
type type_table      = string nullable
type func_annotation = string
type exec_parameter  = string nullable

type element_type =
  [ Type of        ( name * type_type * info )
  | Typevariant of ( name * type_table * info )
  | Function of    ( name * func_annotation * info )
  | Exception of   ( name * exec_parameter * info )
  | Module of      ( name * info )
  | Moduletype of  ( name * info )
  ] <ocaml repr="classic">

type section =
  { section_name : string nullable
  ; section_info : string nullable
  ; elements     : element_type list
  ; sub_sections : section list
  }

type module_parts =
  { module_name : string
  ; module_info : string
  ; sections    : section list
  }

type sec_element_type =
  [ Element
  | MainSection
  | SubSection
  | End
  ] <ocaml repr="classic">

type modules = module_parts list